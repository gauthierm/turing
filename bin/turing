#!/usr/bin/env php
<?php

$autoloadPaths = array(
    // Try to load autoloader if this is the root project.
    __DIR__ . '/../vendor/autoload.php',

    // Try to load an autoloader if this is installed as a library for
    // another root project.
    __DIR__ . '/../../../autoload.php',
);

foreach ($autoloadPaths as $path) {
    if (file_exists($path)) {
        require_once $path;
        break;
    }
}

namespace Silverorange\Turing;

use Symfony\Component\Console\Application;
use Symfony\Component\EventDispatcher\EventDispatcher;
use Lmc\Steward\Console\EventListener\ListenerInstantiator;
use Silverorange\Turing\Console\Command\RunCommand;
use Silverorange\Turing\Console\Command\DefaultCommand;
use Silverorange\Turing\Config\Environment;

Environment::load();

if ($installedAsDependency) {
    define('STEWARD_BASE_DIR', realpath(__DIR__ . '/../../../..'));
} else {
    define('STEWARD_BASE_DIR', realpath(__DIR__ . '/..'));
}

$dispatcher = new EventDispatcher();
$application = new Application('Turing', '1.0.0');
$application->setDispatcher($dispatcher);

// Search for listeners and attach them to dispatcher
(new ListenerInstantiator())->instantiate($dispatcher, STEWARD_BASE_DIR);

$defaultCommand = new DefaultCommand($dispatcher);

$application->addCommands(
    [
        new RunCommand($dispatcher),
        $defaultCommand,
    ]
);

$application->setDefaultCommand($defaultCommand);
$application->run();
